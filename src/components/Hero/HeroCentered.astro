---
import ClipPathReveal from "@components/Animation/ClipPathReveal.astro";
import LightningAnimation from "@components/Canvas/LightningAnimation.astro";
---

<section class="hero-section relative min-h-[calc(100vh-3.5rem)] overflow-hidden pt-32">
  <div class="site-container relative z-10 flex min-h-[calc(100vh-3.5rem)] items-center justify-center">
    <div class="hero-content relative z-20 w-full max-w-4xl text-center">
      <ClipPathReveal>
        <div class="mb-8 flex justify-center">
          <img src="/src/icons/qdaria/QDaria_logo_teal.png" alt="QDaria" class="h-40 w-auto transform scale-150" />
        </div>
        <h1 class="hero-title mb-8 text-6xl font-bold leading-tight tracking-tight text-base-200 lg:text-7xl">
          Pioneering Fault-Tolerant Topological Quantum Computing in the Heart of Norway
        </h1>
        <p class="hero-description mx-auto mb-12 max-w-2xl text-xl text-base-400">
          QDaria is at the forefront of topological quantum computing, harnessing the power of Fibonacci anyons to create inherently stable qubits. Our breakthrough technology achieves unprecedented error resistance through topological protection, making large-scale quantum computing a reality.
        </p>

        <div class="mb-12 grid grid-cols-3 gap-8">
          <div class="stat-card">
            <div class="text-gradient-blue mb-2 text-4xl font-bold">99.99%</div>
            <div class="text-base-400">Error Protection</div>
          </div>
          <div class="stat-card">
            <div class="text-gradient-blue mb-2 text-4xl font-bold">1000x</div>
            <div class="text-base-400">Coherence Time</div>
          </div>
          <div class="stat-card">
            <div class="text-gradient-blue mb-2 text-4xl font-bold">100+</div>
            <div class="text-base-400">Logical Qubits</div>
          </div>
        </div>

        <div class="hero-cta flex flex-wrap justify-center gap-4">
          <a
            href="/whitepaper"
            class="nav-button inline-flex items-center justify-center rounded-lg bg-primary-500 px-6 py-3 text-lg font-medium text-white shadow-lg transition-all hover:bg-primary-600"
          >
            Read Our Whitepaper
          </a>
          <a
            href="/quantum-computing"
            class="nav-button inline-flex items-center justify-center rounded-lg border border-primary-500 bg-transparent px-6 py-3 text-lg font-medium text-primary-500 transition-all hover:bg-primary-500 hover:text-white"
          >
            Explore Technology
          </a>
        </div>
      </ClipPathReveal>
    </div>
  </div>

  <div class="hero-background absolute inset-0 z-0">
    <LightningAnimation />
    <div class="hex-grid absolute inset-0 opacity-10">
      <div class="hex-pattern"></div>
    </div>
  </div>
</section>

<style>
  .hero-section {
    @apply bg-dark-bg;
  }

  .hex-grid {
    @apply overflow-hidden;
    background-size: 50px 87px;
    background-image: url("data:image/svg+xml,%3Csvg width='50' height='87' viewBox='0 0 50 87' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M25 0L50 14.4338V43.3013L25 57.735L0 43.3013V14.4338L25 0Z' fill='%23ffffff' fill-opacity='0.05'/%3E%3Cpath d='M25 57.735L50 72.1688V86.6025L25 72.1688L0 86.6025V72.1688L25 57.735Z' fill='%23ffffff' fill-opacity='0.05'/%3E%3C/svg%3E");
  }

  .hex-pattern {
    @apply absolute inset-0;
    animation: moveHexGrid 60s linear infinite;
  }

  @keyframes moveHexGrid {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(-100%);
    }
  }

  .text-gradient-blue {
    @apply bg-gradient-to-r from-[#04a3ff] via-[#00ffd3] to-[#65ff00] bg-clip-text text-transparent;
  }

  .hero-title,
  .hero-description,
  .hero-cta {
    opacity: 0;
    transform: translateY(20px);
  }

  .hero-title {
    animation: fadeInUp 0.8s ease-out 0.2s forwards;
  }

  .hero-description {
    animation: fadeInUp 0.8s ease-out 0.4s forwards;
  }

  .hero-cta {
    animation: fadeInUp 0.8s ease-out 0.6s forwards;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .nav-button {
    @apply relative;
    box-shadow: 0 0 15px rgba(4, 163, 255, 0.2);

    &:hover {
      box-shadow: 0 0 25px rgba(4, 163, 255, 0.4);
    }

    &::before {
      content: '';
      @apply absolute inset-0 rounded-lg;
      background: radial-gradient(
        600px circle at var(--mouse-x, 0) var(--mouse-y, 0),
        rgba(4, 163, 255, 0.1),
        transparent 40%
      );
      opacity: 0;
      transition: opacity 0.3s;
    }

    &:hover::before {
      opacity: 1;
    }
  }

  .stat-card {
    @apply relative rounded-lg border border-primary-500/30 bg-dark-bg p-4 text-center transition-all;
    box-shadow: 0 0 25px rgba(4, 163, 255, 0.4);

    &:hover {
      box-shadow: 0 0 35px rgba(4, 163, 255, 0.6);
    }

    &::before {
      content: '';
      @apply absolute inset-0 rounded-lg;
      background: radial-gradient(
        600px circle at var(--mouse-x, 0) var(--mouse-y, 0),
        rgba(4, 163, 255, 0.2),
        transparent 40%
      );
      opacity: 0;
      transition: opacity 0.3s;
    }

    &:hover::before {
      opacity: 1;
    }
  }
</style>

<script>
  function updateMousePosition(e: MouseEvent) {
    const target = e.currentTarget as HTMLElement;
    const rect = target.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    target.style.setProperty('--mouse-x', `${x}px`);
    target.style.setProperty('--mouse-y', `${y}px`);
  }

  function initHero() {
    document.querySelectorAll('.nav-button, .stat-card').forEach((el) => {
      el.addEventListener('mousemove', updateMousePosition);
    });
  }

  // Initialize on page load
  initHero();

  // Re-initialize after Astro page transitions
  document.addEventListener('astro:page-load', initHero);
  document.addEventListener('astro:after-swap', initHero);
</script>
