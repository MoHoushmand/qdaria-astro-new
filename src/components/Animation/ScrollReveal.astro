---
interface Props {
  delay?: number;
}

const { delay = 0 } = Astro.props;
---

<div class="reveal-element" style={`transition-delay: ${delay}ms`}>
  <slot />
</div>

<style>
  .reveal-element {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.8s ease-out, transform 0.8s ease-out;
  }

  .reveal-element.visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  const setupAnimations = () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
        }
      });
    }, {
      threshold: 0.1
    });

    document.querySelectorAll('.reveal-element').forEach(element => {
      observer.observe(element);
    });
  };

  // Setup on page load and after navigation
  document.addEventListener('astro:page-load', setupAnimations);
</script>
