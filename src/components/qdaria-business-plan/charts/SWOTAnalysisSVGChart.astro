---
interface Props {
  title?: string;
  description?: string;
}

const { title, description } = Astro.props;
---

<div class="chart-container">
  {title && <h4 class="text-gradient-blue text-xl font-semibold mb-4">{title}</h4>}
  <div class="chart-content">
    <svg width="100%" height="100%" viewBox="0 0 800 400" preserveAspectRatio="xMidYMid meet">
      <!-- Background -->
      <rect x="0" y="0" width="800" height="400" fill="#020617" rx="10" ry="10" />
      
      <!-- Grid lines -->
      <line x1="400" y1="50" x2="400" y2="350" stroke="rgba(255, 255, 255, 0.2)" stroke-width="1" />
      <line x1="200" y1="200" x2="600" y2="200" stroke="rgba(255, 255, 255, 0.2)" stroke-width="1" />
      
      <!-- Quadrant labels -->
      <text x="300" y="100" text-anchor="middle" fill="#04a3ff" font-size="18" font-weight="bold">Strengths</text>
      <text x="500" y="100" text-anchor="middle" fill="#00ffd3" font-size="18" font-weight="bold">Opportunities</text>
      <text x="300" y="300" text-anchor="middle" fill="#ff6b6b" font-size="18" font-weight="bold">Weaknesses</text>
      <text x="500" y="300" text-anchor="middle" fill="#ffcc00" font-size="18" font-weight="bold">Threats</text>
      
      <!-- Strengths -->
      <circle cx="250" cy="120" r="8" fill="#04a3ff" />
      <text x="270" y="125" fill="white" font-size="14">Unique Technology</text>
      
      <circle cx="250" cy="150" r="8" fill="#04a3ff" />
      <text x="270" y="155" fill="white" font-size="14">Team Expertise</text>
      
      <circle cx="250" cy="180" r="8" fill="#04a3ff" />
      <text x="270" y="185" fill="white" font-size="14">Focused Strategy</text>
      
      <!-- Weaknesses -->
      <circle cx="250" cy="220" r="8" fill="#ff6b6b" />
      <text x="270" y="225" fill="white" font-size="14">Startup Scale</text>
      
      <circle cx="250" cy="250" r="8" fill="#ff6b6b" />
      <text x="270" y="255" fill="white" font-size="14">Unproven Technology</text>
      
      <circle cx="250" cy="280" r="8" fill="#ff6b6b" />
      <text x="270" y="285" fill="white" font-size="14">Limited Funding</text>
      
      <!-- Opportunities -->
      <circle cx="450" cy="120" r="8" fill="#00ffd3" />
      <text x="470" y="125" fill="white" font-size="14">Market Growth</text>
      
      <circle cx="450" cy="150" r="8" fill="#00ffd3" />
      <text x="470" y="155" fill="white" font-size="14">First-mover Advantage</text>
      
      <circle cx="450" cy="180" r="8" fill="#00ffd3" />
      <text x="470" y="185" fill="white" font-size="14">Strategic Partnerships</text>
      
      <!-- Threats -->
      <circle cx="450" cy="220" r="8" fill="#ffcc00" />
      <text x="470" y="225" fill="white" font-size="14">Incumbent Competition</text>
      
      <circle cx="450" cy="250" r="8" fill="#ffcc00" />
      <text x="470" y="255" fill="white" font-size="14">Technical Risks</text>
      
      <circle cx="450" cy="280" r="8" fill="#ffcc00" />
      <text x="470" y="285" fill="white" font-size="14">Market Adoption Barriers</text>
      
      <!-- Quadrant borders -->
      <rect x="200" y="50" width="200" height="150" fill="none" stroke="#04a3ff" stroke-width="2" stroke-opacity="0.3" rx="5" ry="5" />
      <rect x="400" y="50" width="200" height="150" fill="none" stroke="#00ffd3" stroke-width="2" stroke-opacity="0.3" rx="5" ry="5" />
      <rect x="200" y="200" width="200" height="150" fill="none" stroke="#ff6b6b" stroke-width="2" stroke-opacity="0.3" rx="5" ry="5" />
      <rect x="400" y="200" width="200" height="150" fill="none" stroke="#ffcc00" stroke-width="2" stroke-opacity="0.3" rx="5" ry="5" />
    </svg>
  </div>
  {description && <p class="text-base text-gray-400 mt-4 italic text-sm">{description}</p>}
</div>

<style>
  .chart-container {
    @apply relative rounded-2xl border border-primary-500/30 bg-dark-bg/80 backdrop-blur-sm transition-all duration-500 overflow-visible;
    box-shadow: 0 0 25px rgba(4, 163, 255, 0.4);
    @apply m-8 p-10 max-w-[800px] w-full select-none;

    &:hover {
      box-shadow: 0 0 50px rgba(4, 163, 255, 0.6);
      transform: translateY(-4px) scale(1.02);
      @apply border-primary-500/50 bg-dark-bg/90;
      animation: pulse-card 2s ease-in-out infinite;
    }

    @keyframes pulse-card {
      0%, 100% {
        box-shadow: 0 0 50px rgba(4, 163, 255, 0.6);
      }
      50% {
        box-shadow: 0 0 70px rgba(4, 163, 255, 0.8);
      }
    }

    &::before {
      content: "";
      @apply absolute inset-0 rounded-2xl;
      background: radial-gradient(
        800px circle at var(--mouse-x, 0) var(--mouse-y, 0),
        rgba(4, 163, 255, 0.15),
        transparent 40%
      );
      opacity: 0;
      transition: opacity 0.5s;
    }

    &:hover::before {
      opacity: 1;
    }
  }

  .chart-content {
    @apply h-[400px] w-full;
  }

  .text-gradient-blue {
    @apply bg-gradient-to-r from-[#04a3ff] via-[#00ffd3] to-[#65ff00] bg-clip-text text-transparent;
    filter: brightness(1.8) saturate(1.4);
    text-shadow: 0 0 30px rgba(4, 163, 255, 0.4);
    animation: pulse-gradient 4s ease-in-out infinite;
  }

  @keyframes pulse-gradient {
    0%, 100% {
      filter: brightness(1.8) saturate(1.4);
      text-shadow: 0 0 30px rgba(4, 163, 255, 0.4);
    }
    50% {
      filter: brightness(2) saturate(1.6);
      text-shadow: 0 0 40px rgba(4, 163, 255, 0.5);
    }
  }
</style>

<script is:inline>
  // Add mouse tracking for hover effect
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.chart-container').forEach((card) => {
      card.addEventListener('mousemove', (e) => {
        const rect = card.getBoundingClientRect();
        const x = e.clientX - rect.left;
        const y = e.clientY - rect.top;
        card.style.setProperty('--mouse-x', `${x}px`);
        card.style.setProperty('--mouse-y', `${y}px`);
      });
    });
  });
</script>
