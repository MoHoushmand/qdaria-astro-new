---
import BaseLayout from "../../layouts/BaseLayout.astro";
import PitchDeck from '@/components/pitch-deck/PitchDeck';

export const prerender = true;

const title = 'QDaria Investor Pitch Deck - Series A Funding';
const description = 'QDaria Quantum+AI Platform - â‚¬12M Investment Opportunity';
---

<BaseLayout title={title} description={description}>
  <!-- Pitch Deck Container -->
  <div class="pitch-deck-wrapper">
    <!-- Loading state while React hydrates -->
    <div class="pitch-deck-loading" id="pitch-loading">
      <div style="text-align:center">
        <div style="width:4rem;height:4rem;border:4px solid #04a3ff;border-top-color:transparent;border-radius:9999px;animation:spin 1s linear infinite;margin:0 auto 1rem;box-shadow:0 0 25px rgba(4,163,255,0.3)"></div>
        <p style="color:rgba(255,255,255,0.6)">Loading pitch deck...</p>
      </div>
    </div>

    <PitchDeck client:only="react" />
  </div>

  <script is:inline>
    // Hide loading indicator once React mounts and hydrates
    if (document.getElementById('pitch-loading')) {
      // Use MutationObserver to detect when React renders
      const observer = new MutationObserver(() => {
        const pitchDeck = document.querySelector('[class*="flex"][class*="min-h-screen"]');
        if (pitchDeck) {
          const loader = document.getElementById('pitch-loading');
          if (loader) {
            loader.style.opacity = '0';
            loader.style.transition = 'opacity 0.3s ease-out';
            setTimeout(() => {
              if (loader.parentNode) {
                loader.parentNode.removeChild(loader);
              }
            }, 300);
          }
          observer.disconnect();
        }
      });

      observer.observe(document.body, {
        childList: true,
        subtree: true
      });

      // Fallback timeout
      setTimeout(() => {
        const loader = document.getElementById('pitch-loading');
        if (loader && loader.parentNode) {
          loader.style.display = 'none';
        }
        observer.disconnect();
      }, 3000);
    }
  </script>
</BaseLayout>

<style is:global>
  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  .pitch-deck-wrapper {
    min-height: calc(100vh - 64px); /* Account for navbar */
    background: #000212;
  }

  .pitch-deck-loading {
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: calc(100vh - 64px);
    background: #000212;
  }
</style>
